#include <bits/stdc++.h>
#define wl            ll t;cin>>t;while(t--)
#define rep(a,b,c)    for(ll a = b; a<c; a++)
#define mp            make_pair
#define vi            vector<ll>
#define pb            push_back
#define f_min         *min_element
#define f_max         *max_element
#define all(v)        v.begin(), v.end()
#define endl          "\n"
#define ll            long long int
#define ld            long double
#define pi            pair<ll , ll>
#define ull           unsigned long long
#define ps(x,y)       fixed<<setprecision(x)<<y
#define li            long int
#define frs           first
#define sec           second
#define inf           INT_MAX
#define setbits(x)    __builtin_popcountll(x)
#define trailz(x)     __builtin_ctzll(x)
#define pqnor         priority_queue<ll>
#define pqrev         priority_queue<ll, vi, greater<ll>>
#define ninf          INT_MIN
#define ul            unsigned long int
#define fast          std::ios::sync_with_stdio(false); cin.tie(NULL);
const ll mod = 1e9 + 7;
const ll N = 1e6 + 5;
using namespace std;

inline void read(vi &v){
	rep(i, 0, v.size())
		cin>>v[i];
}

inline void print(vi v){
	rep(i, 0, v.size())
		cout<<v[i]<<" ";
}

ll gcd(ll a, ll b){
	if(b==0)
		return a;
	else	
		return gcd(b, a%b);
}

ll bp(ll a, ll b){
	a %= mod;
	ll res = 1;
	while(b){
		if(b&1)
			res *= (a%mod);
		a *= (a%mod);
		b>>=1;
	}
	return res%mod;
}

bool comp(pi a, pi b){
	if(a.frs == b.frs)
		return (a.sec < b.sec);
	else	
		return (a.frs < b.frs);
}

void solve()
{
	// your code goes here.
	ll n, q;
	cin>>n>>q;

	vi v(n);
	read(v);

	ll x, y;
	cin>>x>>y;

	v[x] = y;
	ll ans = 1;
	
	ll pre = 0;
	ll last = -1;
	for(ll i = 1; i<n; i++)
	{
		if(v[i] == v[i-1])
		{
			if(pre == 0)
			{
				if((i) > ans)
					ans = i;

				pre = i-1;
			}

			else
			{
				if(((i-1) - pre) > ans )
					ans = i - 1 - pre;

				pre = i-1;
			}
			last = i-1;
		}
	}

	if(last != -1)
	{
		if(ans < ((n-1) - last))
			ans = (n-1) - last;
	}
	else
		ans = n;

	cout<<ans<<endl;
}

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	fast
	wl
	{
		solve();
	}
	return 0;
}
